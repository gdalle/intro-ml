import marimo

__generated_with = "0.10.9"
app = marimo.App(
    width="medium",
    app_title="ML in 1h - theory",
    layout_file="layouts/theory.slides.json",
)


@app.cell(hide_code=True)
def _(mo):
    mo.md(r"""# Machine Learning in 1h - theory""")
    return


@app.cell(hide_code=True)
def _():
    import marimo as mo
    return (mo,)


@app.cell(hide_code=True)
def _(mo):
    mo.md("""## Key concepts""")
    return


@app.cell(hide_code=True)
def _(mo):
    tabs = mo.ui.tabs(
        {
            "Thinking humanly": mo.md("""
            > “The exciting new effort to make computers think... machines with minds, in the full and literal sense.” (Haugeland, 1985)
            
            > “The study of mental faculties through the use of computational models.” (Charniak and McDermott, 1985)  
            
            > “[The automation of] activities that we associate with human thinking, activities such as decision-making, problem solving, learning...” (Bellman, 1978)
            """),
            "Thinking rationally": mo.md("""
            > “The study of mental faculties through the use of computational models.” (Charniak and McDermott, 1985)

            > “The study of the computations that make it possible to perceive, reason, and act.” (Winston, 1992)
            """),
            "Acting humanly": mo.md("""
            > “The art of creating machines that perform functions that require intelligence when performed by people.” (Kurzweil, 1990)

            > “The study of how to make computers do things at which, at the moment, people are better.” (Rich and Knight, 1991)
            """),
            "Acting rationally": mo.md("""
            > “Computational Intelligence is the study of the design of intelligent agents.” (Poole et al., 1998)
            
            > “AI... is concerned with intelligent behavior in artifacts.” (Nilsson, 1998)
            """),
        }
    )

    mo.md(f"""
    ### Artificial intelligence

    {tabs}

    [^source]: Definitions from `AIMA`
    """)
    return (tabs,)


@app.cell(hide_code=True)
def _(mo):
    mo.md(
        r"""
        ### Machine learning

        > "Machine learning is a subfield of computer science that is concerned with building algorithms which, to be useful, rely on a collection of examples of some phenomenon. These examples can come from nature, be handcrafted by humans or generated by another algorithm." (Burkov, 2019)
        """
    )
    return


@app.cell(hide_code=True)
def _(mo):
    examples = mo.carousel(
        [
            mo.md(
                f"""
                [Traveling Salesman Problem](https://www.math.uwaterloo.ca/tsp/)

                {mo.image("https://www.math.uwaterloo.ca/tsp/uk/img/uk49_main_all.jpg")}
                """
            ),
            mo.md(
                f"""
                [Traffic prediction with advanced Graph Neural Networks](https://deepmind.google/discover/blog/traffic-prediction-with-advanced-graph-neural-networks/)

                {mo.image("https://lh3.googleusercontent.com/10gs2ePja3zSVz-A3q4StIw0CAFDprEgXW_qkmx4yPFjrKxenIiYvvkrWCM5jkCoyxNYoqWgw9PHmupJM5sngjVkM5Q2GVCpM0Tuxk1lsQQ8oFmw3gY=w616-rw")}
                """
            ),
            mo.md(
                f"""
                [World scale inverse reinforcement learning in Google Maps](https://research.google/blog/world-scale-inverse-reinforcement-learning-in-google-maps/)

                {mo.image("https://blogger.googleusercontent.com/img/b/R29vZ2xl/AVvXsEiHUdaeXJURVEV2f--mytRfbx5k3yftkMKBpuu43GKhyMaAa-fJC3O4QfTxZjz3hkGjUsCBiO6LLcYRsGeyrpOgIUzDDPW1lOwlr47YXKSLUwJuXxMELxRV9SKcr4BDoy5_2HzcFZX-Wb7m3PcQhWvx1efvG5gkXG_HfrhqrqfZ_xrNyBmSado-Wf_si3wH/s16000/image3.png")}
                """
            ),
        ]
    )

    mo.md(
        f"""
        ### AI vs ML

        {examples}
        """
    )
    return (examples,)


@app.cell(hide_code=True)
def _(mo):
    learning_types = mo.accordion(
        {
            "Supervised (or semi-supervised) learning": mo.md("""
            - labeled data
            - predict outcome
            """),
            "Unsupervised learning": mo.md("""
            - unlabeled data
            - find hidden structure
            """),
            "Reinforcement learning": mo.md("""
            - interactive environment
            - define policy for series of actions
            """),
        }
    )

    mo.md(
        f"""
        ### Types of learning

        {learning_types}
        """
    )
    return (learning_types,)


@app.cell(hide_code=True)
def _(mo):
    mo.md(
        r"""
        ### Types of labels

        * Classification (categorical label)
        * Regression (quantitative label)
        """
    )
    return


@app.cell
def _(mo):
    mo.md("""## A few algorithms""")
    return


@app.cell
def _(mo):
    mo.md("""### Linear regression""")
    return


@app.cell
def _(mo):
    mo.md("""### Logistic regression""")
    return


@app.cell
def _(mo):
    mo.md(r"""### Nearest neighbors""")
    return


@app.cell
def _(mo):
    mo.md(r"""### Decision trees""")
    return


@app.cell
def _(mo):
    mo.md(r"""## Full pipeline""")
    return


@app.cell
def _(mo):
    mo.md("""### Preprocessing""")
    return


@app.cell
def _(mo):
    mo.md("""### Training""")
    return


@app.cell
def _(mo):
    mo.md("""### Evaluation""")
    return


@app.cell
def _(mo):
    mo.md("""### Metrics""")
    return


@app.cell
def _(mo):
    mo.md("""## Software tools""")
    return


@app.cell
def _(mo):
    mo.md(r"""### Languages""")
    return


@app.cell
def _(mo):
    mo.md("""### `scikit-learn`""")
    return


@app.cell
def _(mo):
    mo.md("""### Choosing an algorithm""")
    return


@app.cell
def _(mo):
    mo.md("""## Going further""")
    return


@app.cell
def _(mo):
    mo.md(
        """
        ### Books

        - `HPML`: [The Hundred-page Machine Learning Book](https://themlbook.com/) (Burkov, 2019)
        - `MLE`: [Machine Learning Engineering](http://mlebook.com/) (Burkov, 2020)
        - `MLPS`: [Machine Learning with PyTorch and Scikit-Learn](https://sebastianraschka.com/blog/2022/ml-pytorch-book.html) (Raschka, 2022)
        - `AIMA`: [Artificial Intelligence: A Modern Approach](https://aima.cs.berkeley.edu/) (Russell and Norvig, 2021)
        """
    )
    return


@app.cell
def _(mo):
    mo.md(
        """
        ### Courses

        * [Scikit-learn MOOC by its creators](https://inria.github.io/scikit-learn-mooc/)
        * [Google Machine Learning Education](https://developers.google.com/machine-learning)
        * [Coursera Machine Learning Specialization](https://www.coursera.org/specializations/machine-learning-introduction)
        """
    )
    return


@app.cell
def _():
    return


if __name__ == "__main__":
    app.run()
